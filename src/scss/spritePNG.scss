// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$building-name: 'building';
$building-x: 115px;
$building-y: 0px;
$building-offset-x: -115px;
$building-offset-y: 0px;
$building-width: 18px;
$building-height: 28px;
$building-total-width: 133px;
$building-total-height: 106px;
$building-image: '/img/spritePNG.png';
$building: (115px, 0px, -115px, 0px, 18px, 28px, 133px, 106px, '/img/spritePNG.png', 'building', );
$calendar-name: 'calendar';
$calendar-x: 0px;
$calendar-y: 0px;
$calendar-offset-x: 0px;
$calendar-offset-y: 0px;
$calendar-width: 43px;
$calendar-height: 48px;
$calendar-total-width: 133px;
$calendar-total-height: 106px;
$calendar-image: '/img/spritePNG.png';
$calendar: (0px, 0px, 0px, 0px, 43px, 48px, 133px, 106px, '/img/spritePNG.png', 'calendar', );
$coin-name: 'coin';
$coin-x: 33px;
$coin-y: 52px;
$coin-offset-x: -33px;
$coin-offset-y: -52px;
$coin-width: 30px;
$coin-height: 28px;
$coin-total-width: 133px;
$coin-total-height: 106px;
$coin-image: '/img/spritePNG.png';
$coin: (33px, 52px, -33px, -52px, 30px, 28px, 133px, 106px, '/img/spritePNG.png', 'coin', );
$display-name: 'display';
$display-x: 47px;
$display-y: 0px;
$display-offset-x: -47px;
$display-offset-y: 0px;
$display-width: 36px;
$display-height: 32px;
$display-total-width: 133px;
$display-total-height: 106px;
$display-image: '/img/spritePNG.png';
$display: (47px, 0px, -47px, 0px, 36px, 32px, 133px, 106px, '/img/spritePNG.png', 'display', );
$key-name: 'key';
$key-x: 115px;
$key-y: 32px;
$key-offset-x: -115px;
$key-offset-y: -32px;
$key-width: 16px;
$key-height: 18px;
$key-total-width: 133px;
$key-total-height: 106px;
$key-image: '/img/spritePNG.png';
$key: (115px, 32px, -115px, -32px, 16px, 18px, 133px, 106px, '/img/spritePNG.png', 'key', );
$licence-name: 'licence';
$licence-x: 87px;
$licence-y: 0px;
$licence-offset-x: -87px;
$licence-offset-y: 0px;
$licence-width: 24px;
$licence-height: 32px;
$licence-total-width: 133px;
$licence-total-height: 106px;
$licence-image: '/img/spritePNG.png';
$licence: (87px, 0px, -87px, 0px, 24px, 32px, 133px, 106px, '/img/spritePNG.png', 'licence', );
$medal-name: 'medal';
$medal-x: 87px;
$medal-y: 36px;
$medal-offset-x: -87px;
$medal-offset-y: -36px;
$medal-width: 24px;
$medal-height: 32px;
$medal-total-width: 133px;
$medal-total-height: 106px;
$medal-image: '/img/spritePNG.png';
$medal: (87px, 36px, -87px, -36px, 24px, 32px, 133px, 106px, '/img/spritePNG.png', 'medal', );
$people-name: 'people';
$people-x: 0px;
$people-y: 85px;
$people-offset-x: 0px;
$people-offset-y: -85px;
$people-width: 32px;
$people-height: 21px;
$people-total-width: 133px;
$people-total-height: 106px;
$people-image: '/img/spritePNG.png';
$people: (0px, 85px, 0px, -85px, 32px, 21px, 133px, 106px, '/img/spritePNG.png', 'people', );
$percent-name: 'percent';
$percent-x: 0px;
$percent-y: 52px;
$percent-offset-x: 0px;
$percent-offset-y: -52px;
$percent-width: 29px;
$percent-height: 29px;
$percent-total-width: 133px;
$percent-total-height: 106px;
$percent-image: '/img/spritePNG.png';
$percent: (0px, 52px, 0px, -52px, 29px, 29px, 133px, 106px, '/img/spritePNG.png', 'percent', );
$spritesheet-width: 133px;
$spritesheet-height: 106px;
$spritesheet-image: '/img/spritePNG.png';
$spritesheet-sprites: ($building, $calendar, $coin, $display, $key, $licence, $medal, $people, $percent, );
$spritesheet: (133px, 106px, '/img/spritePNG.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
