var Cart = {
    data: {
        prices: {
            10: 1200,
            20: 3400,
            30: 5000,
            40: 12000
        },
        promocode: {
            code: '',
            discount: 0
        },
        listeners: {
            10: [
                {
                    fname: "",
                    mname: "",
                    lname: "",
                },
                {
                    fname: "",
                    mname: "",
                    lname: "",
                },
            ],
            20: [
                {
                    fname: "",
                    mname: "",
                    lname: "",
                }
            ],
            30: [
                {
                    fname: "",
                    mname: "",
                    lname: "",
                }
            ]
        },
        programs: [
            {
                id: 1,
                title: "Программа 1",
                prices: [
                    {10: 72},
                    {20: 144}
                ],
                selected: 10,
                count: 2
            },
            {
                id: 1,
                title: "Программа 1",
                prices: [
                    {10: 72},
                    {20: 144}
                ],
                selected: 20,
                count: 1
            },
            {
                id: 2,
                title: "Программа 2",
                prices: [
                    {30: 250},
                    {40: 560}
                ],
                selected: 30,
                count: 1
            }
        ]
    },

    get prices() {
        return this.data.prices;
    },
    set prices(val) {
        this.data.prices = val;
    },

    get promocode() {
        return this.data.promocode;
    },
    set promocode(val) {
        this.data.promocode = val;
    },

    get listeners() {
        return this.data.listeners;
    },
    set listeners(val) {
        this.data.listeners = val;
    },

    get programs() {
        return this.data.programs;
    },
    set programs(val) {
        this.data.programs = val;
        this.update();
    },

    get content() {
        return this.data;
    },
    set content(val) {
        this.data.prices = val.prices;
        this.data.promocode = val.promocode;
        this.data.listeners = val.listeners;
        this.data.programs = val.programs;
    },

    get total() {
        var tot = 0;
        for (var index in this.data.programs) {
            tot += parseInt(this.data.prices[this.data.programs[index].selected]) * parseInt(this.data.programs[index].count);
        }
        return tot;
    },

    get list() {
        var list = "";
        for (var index in this.data.programs) {
            if (index > 0) list += ',';
            list += this.data.programs[index].selected.toString() + (parseInt(this.data.programs[index].count) > 1 ? ":" + this.data.programs[index].count.toString() : "");
        }
        return list;
    },

    remove: function (i) {
        // удалить одну программу из корзины
    },

    duplicate: function (i) {
        // продублировать
    },

    update: function () {
        // обновить вид корзины
        calcCartModal();
    }

};

function calcCartModal() {

    var cartModal = $('#cartAddModal');
    cartModal.find('.cart-modal-items .cart-modal-item').each(function () {
        var index = this.dataset.index;
        $(this).find('span.price').text(number_format(Cart.prices[Cart.programs[index].selected], 0, ',', ' '));
        $(this).find('span.sub_total').text(number_format(Cart.prices[Cart.programs[index].selected] * Cart.programs[index].count, 0, ',', ' '));
    });
    cartModal.find('span.total').text(number_format(Cart.total, 0, ',', ' '));
    $("#cart-items-count-word").text(Cart.programs.length + " " + pluralForm(Cart.programs.length, ['позиция', 'позиции', 'позиций']));
    $("#cart-items-count").text(Cart.programs.length);
    $("#btn-cart-share").attr('href', "/shop/cart/add?list=" + Cart.list);

}

function delCartItemByIndex(obj, event) {
    event.preventDefault(event);

    // запоминаем ссылку
    var _url = obj.href;
    if (!_url) return;

    var id = _url.substring(_url.lastIndexOf('/') + 1);
    if (!id) return;

    // заблокируем ссылку
    obj.href = "";
    $(obj).addClass('disabled');

    $.ajax({
        url: _url,
        context: document.body,
        method: 'DELETE',
        cache: false,
        dataType: "json",
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    }).done(function (data) {
        // получаем обновленную корзину
        Cart.content = data.cart;

        // вставляем корзину в попап
        var modal = $('#cartAddModal');
        modal.find('.cart-modal-items').html(data.html);

        $('div.header-cart').html(data.btn);

        Cart.update();

        // открываем попап
        //modal.modal('show');
    }).fail(function () {
        console.error('AJAX Err');
    }).always(function () {
        // разблокируем ссылку
        obj.href = _url;
        $(obj).removeClass('disabled');
    });
}

function dupCartItemByIndex(obj, event) {
    event.preventDefault(event);

    var _url = obj.href;
    if (!_url) return;

    var id = _url.substring(_url.lastIndexOf('/') + 1);
    if (!id) return;

    // заблокируем ссылку
    obj.href = "";
    $(obj).addClass('disabled');

    $.ajax({
        url: _url,
        context: document.body,
        method: 'PUT',
        cache: false,
        dataType: "json",
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    }).done(function (data) {
        // получаем обновленную корзину
        Cart.content = data.cart;

        // вставляем корзину в попап
        var modal = $('#cartAddModal');
        modal.find('.cart-modal-items').html(data.html);

        $('div.header-cart').html(data.btn);

        Cart.update();

        // открываем попап
        //modal.modal('show');
    }).fail(function () {
        console.error('AJAX Err');
    }).always(function () {
        // разблокируем ссылку
        obj.href = _url;
        $(obj).removeClass('disabled');
    });
}

function min(input) {
    return input.sort(function (a, b) {
        return a > b;
    })[0];
}

// Калькулятор для формы Возврата 13%
function taxRefund() {
    var num = document.getElementById('tax_number').value;
    var result = num * 0.13;
    result = result.toFixed(2).replace('.', ',');
    result = result.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
    document.getElementById('tax_summa').innerHTML = result + ' руб.';
}

function notextFilter(e) {
    e = e || event;

    console.log("sqqqq");

    if (e.ctrlKey || e.altKey || e.metaKey) return;

    var chr = getChar(e);

    // с null надо осторожно в неравенствах,
    // т.к. например null >= '0' => true
    // на всякий случай лучше вынести проверку chr == null отдельно
    if (chr == null) return;

    if (chr < '0' || chr > '9') {
        return false;
    }
}


function initFileupload(root = '') {


    if ($(root + '.fileupload').length) {

        console.info('Starting fileupload');

        $(document).bind('drop dragover', function (e) {
            e.preventDefault();
        });

        $(root + '.fileupload').each(function () {

            $(this).fileupload({
                // https://github.com/blueimp/jQuery-File-Upload/wiki/Options
                url: '/api/upload', //$(this).form.action,
                dataType: 'json',
                //autoUpload: false,
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png|zip|rar|pdf|docx?|tif?f)$/i,
                maxFileSize: 150000000,
                disableImageResize: true,
                maxChunkSize: 512000,
                maxRetries: 200,
                retryTimeout: 2000,
                dropZone: $(this),
                formAcceptCharset: 'utf-8',
                limitConcurrentUploads: 2,
                progressInterval: 500,
                cache: false,
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                },
                xhrFields: {
                    withCredentials: true
                },
                //recalculateProgress: false,
                add: function (e, data) {
                    // ДОБАВЛЕНИЕ ФАЙЛА В ОЧЕРЕДЬ
                    console.log('Upload add');
                    var that = $(this);
                    var _e = e;
                    var _data = data;

                    var fu = $(this).data('blueimp-fileupload') || $(this).data('fileupload'),
                        url = fu.options.url;

                    // контекст добавленных файлов
                    var list = that.find('ul.files');
                    $.each(data.files, function (index, selected_file) {
                        data.context = $('<li/>').addClass('list-group-item').html('<a href="#cancel" title="Отменить" class="float-right" onclick="return confirmAction(\'Убрать прикрепленный файл?\');"><i class="fas fa-times fa-fw text-danger"></i></a> <i class="far fa-clock fa-fw text-warning" title="Ожидает своей очереди"></i> ' + selected_file.name);
                        data.context.appendTo(list);
                    });

                    $.each(data.files, function (index, selected_file) {
                        $.ajaxQueue({
                            headers: {
                                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                            },
                            xhrFields: {
                                withCredentials: true
                            },
                            dataType: "json",
                            url: url,
                            data: {file: selected_file.name},
                            cache: false,
                            beforeSend: function () {
                                data.context.html('<i class="fas fa-sync fa-spin fa-fw text-primary" title="Файл проверяется"></i> ' + selected_file.name + ' проверяется...');
                            },
                            success: function (result) {
                                var uploaded_file = result.file;
                                if (uploaded_file) {
                                    data.uploadedBytes = uploaded_file && uploaded_file.size;
                                    if (selected_file.size === uploaded_file.size) {
                                        data.context.html('<a href="#delete" data-type="DELETE" data-url="' + uploaded_file.deleteUrl + '" title="Убрать" class="float-right ajax" onclick="return confirmAction(\'Убрать прикрепленный файл?\');"><i class="fas fa-times fa-fw text-danger"></i></a><i class="fas fa-check-circle fa-fw text-success" title="Успешно прикреплен"></i> ' + selected_file.name);
                                        var target = that.find('.fileupload-target').first().clone();
                                        target.attr('value', result.file.name);
                                        target.appendTo(that);
                                    } else {
                                        data.context.html('<div class="abs" style="opacity: 0.5;">\n' +
                                            '                <div class="progress h-100">\n' +
                                            '                    <div class="progress-bar progress-bar-success br-0" role="progressbar" aria-valuenow="' + parseInt(uploaded_file.size / selected_file.size * 100, 10) + '" aria-valuemin="0" aria-valuemax="100" style="width: ' + parseInt(uploaded_file.size / selected_file.size * 100, 10) + '%"></div>\n' +
                                            '                </div>\n' +
                                            '            </div>\n' +
                                            '            <a href="#delete" data-type="DELETE" data-url="' + uploaded_file.deleteUrl + '" title="Убрать" class="float-right ajax" onclick="return confirmAction(\'Убрать прикрепленный файл?\');"><i class="fas fa-times fa-fw text-danger"></i></a>\n' +
                                            '            <i class="fas fa-sync fa-spin fa-fw text-primary" title="Файл загружается"></i> ' + selected_file.name + ' загружается');
                                        // покажем начало работы
                                        that.find('.total-icon-in-progress').show();
                                        that.find('.total-icon-default').hide();
                                        // запустим обработку
                                        data.submit();
                                    }
                                } else {
                                    data.context.html('<div class="abs" style="opacity: 0.5;">\n' +
                                        '                <div class="progress h-100">\n' +
                                        '                    <div class="progress-bar progress-bar-success br-0" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>\n' +
                                        '                </div>\n' +
                                        '            </div>\n' +
                                        '            <a href="#" title="Убрать" class="float-right" onclick="return confirmAction(\'Убрать прикрепленный файл?\');"><i class="fas fa-times fa-fw text-danger"></i></a>\n' +
                                        '            <i class="fas fa-sync fa-spin fa-fw text-primary" title="Файл обрабатывается"></i> ' + selected_file.name);
                                    // покажем начало работы
                                    that.find('.total-icon-in-progress').show();
                                    that.find('.total-icon-default').hide();
                                    // запустим обработку
                                    data.submit();
                                }
                            },
                            error: function () {
                                data.context.html('<i class="fas fa-times-circle fa-fw text-danger" title="Ошибка"></i> ' + selected_file.name + ' - сбой связи. Повторно выберите файл.');
                            }
                        });

                    });
                },
                // Сбой связи
                fail: function (e, data) {
                    var that = $(this);
                    var _e = e;
                    var _data = data;
                    console.log('Upload fail');

                    var fu = $(this).data('blueimp-fileupload') || $(this).data('fileupload');

                    $.each(data.files, function (index, file) {
                        if (data.loaded < data.total) {
                            console.log('item fail ' + file.name);
                            $(data.context).find('.progress-bar').attr('class', 'progress-bar progress-bar-danger br-0');
                        } else if (data.loaded >= data.total) {
                            console.log('item restored ' + file.name);
                            var target = that.find('.fileupload-target').first().clone();
                            target.attr('value', file.name);
                            target.appendTo(that);
                            fu._trigger('done', _e, _data);
                        }
                    });

                    var url = fu.options.url,
                        retries = data.retries || 0,
                        retry = function () {
                            $.ajaxQueue({
                                headers: {
                                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                                },
                                xhrFields: {
                                    withCredentials: true
                                },
                                dataType: "json",
                                url: url,
                                data: {file: data.files[0].name},
                                cache: false,
                                beforeSend: function () {
                                    that.find('.total-icon-default').hide();
                                    that.find('.total-icon-wait').hide();
                                    that.find('.total-icon-in-progress').show();
                                    that.find('.file-wrap_text').text('Повторная попытка');
                                },
                                success: function (result) {
                                    var file = result.file;
                                    console.log('success after fail ' + (file && file.name ? file.name : ' - еще не загружался'));
                                    data.uploadedBytes = file && file.size;
                                    // clear the previous data:
                                    data.data = null;
                                    $(data.context).find('.progress-bar').attr('class', 'progress-bar progress-bar-success br-0');
                                    data.submit();
                                },
                                error: function () {
                                    fu._trigger('fail', e, data);
                                }
                            });
                        };
                    if (data.errorThrown !== 'abort' &&
                        data.uploadedBytes < data.files[0].size &&
                        retries < fu.options.maxRetries) {
                        retries += 1;
                        data.retries = retries;
                        that.find('.total-icon-default').hide();
                        that.find('.total-icon-in-progress').hide();
                        that.find('.total-icon-wait').show();
                        that.find('.file-wrap_text').text('Сбой связи. Повторная попытка через ' + Math.floor((retries * fu.options.retryTimeout) / 1000) + ' сек ...');
                        window.setTimeout(retry, retries * fu.options.retryTimeout);
                        return;
                    }
                    data.retries = 0;

                    if (data.loaded >= data.total) {
                        //that.find('.total-icon-in-progress').hide();
                        //that.find('.total-icon-default').show();
                        //that.find('.file-wrap_text').text('Готово');
                    }
                },
                // Окончание загрузки
                done: function (e, data) {
                    // ЗАВЕРШЕНИЕ ЗАГРУЗКИ
                    console.log('Upload done');
                    var that = $(this);

                    $.each(data.result.files, function (index, file) {
                        if (file.url) {
                            console.dir(file);
                            $(data.context)
                                .html('<a href="#delete" data-url="' + file.deleteUrl + '" title="Убрать" class="float-right" onclick="return confirmAction(\'Убрать прикрепленный файл?\');"><i class="fas fa-times fa-fw text-danger"></i></a><i class="fas fa-check-circle fa-fw text-success" title="Успешно прикреплен"></i> ' + file.name);
                            var target = that.find('.fileupload-target').first().clone();
                            target.attr('value', file.name);
                            target.appendTo(that);
                        } else if (file.error) {
                            $(data.context)
                                .html('<i class="fas fa-times-circle fa-fw text-danger" title="Ошибка"></i> ' + file.name + '<span class="text-danger"> - ' + file.error + '</span>');
                        }
                    });

                    if (data.loaded >= data.total) {
                        that.find('.total-icon-in-progress').hide();
                        that.find('.total-icon-default').show();
                        that.find('.file-wrap_text').text('Готово');
                    }
                },
                stop: function (e) {
                    console.log('Upload stop');
                    var that = $(this);
                    var bar = that.find('.total-progress');
                    // прогресс
                    bar.hide().css('width', '0%');
                    // меняем глобальную иконку
                    //that.find('.total-icon-in-progress').hide();
                    //that.find('.total-icon-default').show();
                    //that.find('.file-wrap_text').text('');
                },
                // Персональный прогресс
                progress: function (e, data) {
                    //console.dir($(this));
                    if (e.isDefaultPrevented()) {
                        return false;
                    }
                    var progress = Math.floor(data.loaded / data.total * 100);
                    if (data.context) {
                        data.context.children().each(function () {
                            $(this).find('.progress-bar')
                                .attr('aria-valuenow', progress)
                                .css('width', progress + '%');
                        });
                    }
                },
                // Общий прогресс
                progressall: function (e, data) {
                    var progress = Math.floor(data.loaded / data.total * 100);
                    var that = $(this);
                    var bar = that.find('.total-progress');

                    if (data.loaded < data.total) {
                        bar.show().css('width', progress + '%');
                        bar.attr('class', 'progress-bar progress-bar-success total-progress');
                        that.find('.total-icon-in-progress').show();
                        that.find('.total-icon-default').hide();
                        that.find('.file-wrap_text').text('Файлы загружаются...');
                    } else if (data.loaded >= data.total) {
                        that.find('.total-icon-in-progress').hide();
                        that.find('.total-icon-default').show();
                        that.find('.file-wrap_text').text('Готово');
                    }
                }
            });

        });

    }
}


$(function () {

    $('.navbar-header').on('click', function () {
        $('#main-menu').fadeToggle(301);
        $('.menu-wrap').toggleClass('z-index');
    });

    if ($(".add-to-cart").length) {

        $(document).on('click', 'a.add-to-cart', function (event) {
            event.preventDefault();

            var obj = this;

            var _url = obj.href;
            if (!_url) return;

            var id = _url.substring(_url.lastIndexOf('/') + 1);
            if (!id) return;

            // заблокируем ссылку
            obj.href = "";
            $(obj).addClass('disabled');

            $.ajax({
                url: _url,
                context: document.body,
                method: 'GET',
                cache: false,
                dataType: "json",
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                }
            }).done(function (data) {
                // получаем обновленную корзину
                Cart.content = data.cart;

                // вставляем корзину в попап
                var modal = $('#cartAddModal');
                modal.find('.cart-modal-items').html(data.html);

                $('div.header-cart').html(data.btn);

                Cart.update();

                // открываем попап
                modal.modal('show');
            }).fail(function () {
                console.error('AJAX Err');
            }).always(function () {
                // разблокируем ссылку
                obj.href = _url;
                $(obj).removeClass('disabled');
            });
        });

        $(document).on('submit', 'form.add-to-cart', function (event) {

            event.preventDefault();
            var _url = this.action;
            var _data = $(this).serialize();

            $.ajax({
                url: _url,
                context: document.body,
                method: "PUT",
                cache: false,
                data: _data,
                dataType: "json"
            }).done(function (data) {
                // получаем обновленную корзину
                Cart.content = data.cart;

                // вставляем корзину в попап
                var modal = $('#cartAddModal');
                modal.find('.cart-modal-items').html(data.html);

                $('div.header-cart').html(data.btn);

                Cart.update();

                // открываем попап
                modal.modal('show');
            }).fail(function () {
                console.error('AJAX Err');
            });

        });

    }


    if (window.innerWidth > 768) {
        $('.programs__card-main').equalHeights({wait: true});
    }

    if ($("#nalog-carousel").length) {
        $('#nalog-carousel').carousel({
            interval: 130000
        });
    }

    if ($("#carousel-modal-stock").length) {
        $('#carousel-modal-stock').carousel({
            interval: false
        });
    }

    if ($('.author-card').length) {
        //console.log('author-card');
        $('.author-card').equalHeights({wait: true});
    }

    if ($("#btn-menu-bars").length) {
        $('#btn-menu-bars').on('click', function () {
            $('#lms-menu').toggleClass('w-100');
            $('.final-test').toggleClass('bd');
        });
    }

    if ($('[data-toggle="popover"]').length) {
        $('[data-toggle="popover"]').popover();
    }

    initFileupload();
});